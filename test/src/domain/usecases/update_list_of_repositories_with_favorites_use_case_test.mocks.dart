// Mocks generated by Mockito 5.3.2 from annotations
// in a3data_challenge/test/src/domain/usecases/update_list_of_repositories_with_favorites_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:a3data_challenge/src/domain/entities/repository_entity.dart'
    as _i3;
import 'package:a3data_challenge/src/domain/usecases/update_list_of_repositories_with_favorites_use_case.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [UpdateListOfRepositoriesWithFavoritesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateListOfRepositoriesWithFavoritesUseCase extends _i1.Mock
    implements _i2.UpdateListOfRepositoriesWithFavoritesUseCase {
  @override
  List<_i3.RepositoryEntity> call({
    required List<_i3.RepositoryEntity>? repositories,
    required List<_i3.RepositoryEntity>? favorites,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {
            #repositories: repositories,
            #favorites: favorites,
          },
        ),
        returnValue: <_i3.RepositoryEntity>[],
        returnValueForMissingStub: <_i3.RepositoryEntity>[],
      ) as List<_i3.RepositoryEntity>);
}
